import pandas as pd
import numpy as np
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
import seaborn as sns

# Step 1: Load the dataset
df = pd.read_csv("global_electricity_production_data.csv")

# Step 2: Extract numeric value (remove 'GWh')
# df['value'] = df['value'].str.extract(r'([\d.]+)').astype(float)

# Step 3: Pivot table to convert into structured feature set
pivot_df = df.pivot_table(index='country_name', columns='product', values='value', aggfunc='sum').fillna(0)

# Step 4: Normalize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(pivot_df)

# Step 5: K-Means Clustering
kmeans = KMeans(n_clusters=3, random_state=42)
labels = kmeans.fit_predict(X_scaled)

# Step 6: Evaluation using Silhouette Score
score = silhouette_score(X_scaled, labels)
print("K-Means Silhouette Score:", score)

# Step 7: Visualize using PCA (reduce to 2D)
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

plt.figure(figsize=(8, 6))
sns.scatterplot(x=X_pca[:, 0], y=X_pca[:, 1], hue=labels, palette="rainbow")
plt.title("K-Means Clustering on Electricity Data")
plt.xlabel("PCA Component 1")
plt.ylabel("PCA Component 2")
plt.legend(title="Cluster")
plt.grid(True)
plt.tight_layout()
plt.show()
